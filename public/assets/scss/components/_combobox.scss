.custom-select {
    &_border {
        .combo-box-selected {
            border: rem(1) solid map-get($color-scheme, 'black-10');
        }
    }

    &_sm {
        .combo-box-selected {
            height: rem(40);

            &:after { 
                top: rem(8);
            }
        }
    }
    &_md {
        .combo-box-selected {
            height: rem(48);

            &:after { 
                top: rem(12);
            }
        }
    }
}

.combo-box {
    position: relative;
    display: inline-block;
    font-size: rem(15);
    font-weight: 500;
    line-height: 160%;

    &.searchable {
        .combo-box-options {
            padding-top: rem(60);
            max-height: rem(260);
        }
    }

    &.tag-mode {
        .combo-box-selected {
            height: initial;
            min-height: rem(56);
            padding-top: rem(8);
            padding-bottom: rem(7);
        }
    }
}

.combo-box-selected {
    position: relative;
    cursor: pointer;
    white-space: nowrap;
    overflow: hidden;
    z-index: 1;
    border-radius: rem(8);
    background-color: #fff;
    padding: 0 rem(45) 0 rem(15);
    @extend %flex;
    @extend %align-middle;

    &:after {
        @include font-icon("\e908");
        position: absolute;
        font-size: rem(24);
        cursor: pointer;
        display: inline-block;
        top: rem(12);
        margin-left: rem(10);
        right: rem(12);
        @extend %primary-transition;
    }

    &.active {
        &:after {
            transform: rotate(180deg);
        }
    }
}

.combo-box-tags {
    @extend %flex;
    @extend %align-top;
    @include flex-flow(row, wrap);
    margin: rem(-10) 0 0 rem(-10);
}

.combo-box-tag {
    cursor: initial;
    @extend %flex;
    margin: rem(10) 0 0 rem(10);
    line-height: initial;
    background-color: map-get($color-scheme, 'black');
    color: #fff;
    padding: rem(10);
    border-radius: rem(5);
    font-size: rem(16);

    &__remove {
        margin-left: rem(8);
        max-width: rem(16);
        @extend %user-cursor;
        @extend %flex;
        @extend %align-middle;
    }
}
  
.combo-box-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    min-width: 100%;
    border-radius: rem(8);
    overflow: hidden;
    background: #fff;
    z-index: z(dropdown);
    box-shadow: map-get($shadows, 'xs');
    transform: translateY(rem(10));
    @extend %hidden;
    @extend %primary-transition;

    &::-webkit-scrollbar {
        width: rem(7);

        &-thumb {
            background-color: map-get($color-scheme, 'neutral');
        }
    }

    &.opened {
        transform: translateY(0);
        @extend %show;
    }
}

.combo-box-search {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - #{rem(7)});
    padding: rem(10) rem(24);
    background-color: #fff;
    z-index: 2;

    input {
        box-shadow: map-get($shadows, 'xs');
        width: 100%;
        height: rem(40);
        border-radius: rem(8);
        padding: 0 rem(16);
    }
}

.combo-box-options {
    max-height: rem(250);
    overflow: auto;

    &::-webkit-scrollbar {
        width: rem(7);

        &-thumb {
            background-color: map-get($color-scheme, 'neutral');
        }
    }
}

.combo-option {
    position: relative;
    display: block;
    width: 100%;
    line-height: 160%;
    padding: rem(8); 
    text-overflow: ellipsis;
    color: map-get($color-scheme, 'black-60');
    margin-bottom: rem(4);
    cursor: pointer;
    z-index: 1;

    & > img, & > .icon { 
        display: inline-block;
        margin-right: rem(8);
    }

    &.selected, &.multiSelected {
        background: #ECECEC;
    }

    &:focus, &_focused, &:hover {
        background: #ECECEC;
    }

    &:last-child {
        margin-bottom: 0;
    }
}

.disabled {
    background-color:#fff;
    color: map-get($color-scheme, 'black-20');
    pointer-events: none;
    opacity: 0.7;
}

.disabled:hover {
    background-color:#fff !important;
    color: map-get($color-scheme, 'black-20') !important;
}